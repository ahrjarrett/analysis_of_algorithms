#+TITLE: Spacemacs Org-Mode CheatSheet
#+AUTHOR: ahrjarrett
#+OPTIONS: toc:nil

[[https://ontologicalblog.files.wordpress.com/2016/11/spacemacs_cheat_sheet_compact_1-1.pdf][Spacemacs Org-Mode Cheatsheet]]

| Org Mode Command | Result                                                              | Mode                                     |
|------------------+---------------------------------------------------------------------+------------------------------------------|
| =<SPC> m <RET>=  | Create another of that heading below.                               | Command                                  |
| =<SPC> m p=      | Start Pomodoro (25 min)                                             | Command                                  |
| =<=              | Move Cursor Left One Word (works like =<SHIFT TAB>= in tables, too) | Command                                  |
| =>=              | Move Cursor Right One Word (works like =<TAB>= in tables)           | Command                                  |
| =<TAB>=          | Rotate Current Subtree Btwn States                                  | Command, cursor on tree                  |
| =<SHIFT TAB>=    | Rotate Entire Buffer Btwn States                                    | Command, cursor on tree                  |
| =g j=            | Go down (forward) one heading                                       | Command, cursor on tree                  |
| =g k=            | Go up (backward) one heading                                        | Command, cursor on tree                  |
| =< s <TAB>=      | In insert mode, add source block                                    | Insert                                   |
| =C-c '=          | Enter source mode of specfied language in new buffer                | Command                                  |
| =, c=            | In command mode, exit source entry mode                             | Command (from within source code buffer) |
| =C-c C-e=        | Export menu                                                         | Command                                  |
| =C-c C-e h o=    | Export to html and open file                                        | Command (changes current application)    |


* Practice w/ these things:
*** inside stuff
**** inside stuff
*** inside stuff
**** inside stuff
***** inside stuff
****** inside stuff
******* inside stuff
******** inside stuff
*** inside the inside
*** more stuff like 'er
** more inside stuff
*** inside the inside
*** more stuff like 'er
** more inside stuff
*** inside the inside
*** more stuff like 'er
** more inside stuff
*** inside the inside
*** more stuff like 'er
* Here they are!
** More stuff.
   :LOGBOOK:
   CLOCK: [2017-11-24 Fri 22:18]--[2017-11-24 Fri 23:42] =>  1:24
   :END:
*** inside more stuff is more stuff
**** inside more stuff is more stuff 2
***** inside more stuff is more stuff 3
****** inside more stuff is more stuff 4
******* inside more stuff is more stuff 4
******** inside more stuff is more stuff 4
********* inside more stuff is more stuff 4
********** inside more stuff is more stuff 4
*********** inside more stuff is more stuff
************ inside more stuff is more stuff 2
************* inside more stuff is more stuff 3
************** inside more stuff is more stuff 4
*************** inside more stuff is more stuff 4
**************** inside more stuff is more stuff 4
***************** inside more stuff is more stuff 4
****************** inside more stuff is more stuff 4


* Source Code:

#+BEGIN_SRC javascript

  /* how does this format in the browser?
   ,* is this rendered like ``` blocks in github flavored markdown?
   ,*/

  // single line comment

  const myConstant = 'this is my constant'

  // not tail-recursive tho
  function factorial(n) {
    if(n === 1) return n
    return n * factorial(n-1)
  }

  let a = Array.prototype
  
  console.log(a) // [constructor: ƒ, concat: ƒ, pop: ƒ, push: ƒ, shift: ƒ, …]
  
  factorial(5)
#+END_SRC

